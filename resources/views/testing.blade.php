<x-layout>
    <x-slot:title>{{ $title }}</x-slot:title>
    <meta name="csrf-token" content="{{ csrf_token() }}">
    <main class="max-w-6xl mx-auto px-4 py-8">
        <h1 class="text-2xl font-semibold text-center mb-8">Pilihan Produk Kami</h1>
        
        <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 mb-10">
            <!-- Product 1 -->
            @foreach($products as $product)
            <div class="bg-white rounded-lg overflow-hidden shadow hover:-translate-y-1 transition-transform duration-300 p-2">
                <div class="h-44 overflow-hidden">
                    <img src="{{ asset('storage/product/'. $product->imgname) }}" alt="Rendang Daging Sapi" class="w-full h-full rounded-[6px] object-cover">
                </div>
                <div class="p-4">
                    <h3 class="font-semibold mb-1">{{ $product->nama }}</h3>
                    <p class="text-sm text-gray-600 mb-1">{{ $product->deskripsi }}</p>
                    <p class="font-semibold mb-3">Rp. {{ number_format($product->harga,0,',','.') }}</p>
                    <button class="w-full py-2 border border-[#ff9a00] text-[#ff9a00] hover:bg-[#ff9a00] hover:text-white transition-colors rounded font-medium" data-productid = {{ $product->product_id }}>
                        Add to Cart
                    </button>
                </div>
            </div>
            @endforeach
        </div>
        
        <div class="max-w-lg mx-auto bg-white rounded-lg shadow p-6">
            <h2 class="bg-[#ff9a00] text-white text-center py-3 rounded-t-lg font-semibold -mx-6 -mt-6 mb-6">Jadwal Pengiriman Catering</h2>
            
            <div class="mb-4">
                <label for="delivery-date" class="block mb-1 font-medium">Tanggal Pengiriman</label>
                <input type="text" id="delivery-date" class="w-full p-2 border border-gray-200 rounded" value="20 Juni 2025" readonly>
            </div>
            
            <div class="mb-4">
                <div class="bg-white border border-gray-200 rounded">
                    <div class="bg-[#ff9a00] text-white px-4 py-2 flex justify-between items-center rounded-t">
                        <button id="prev-month" class="text-white">&lt;</button>
                        <div id="calendar-month" class="font-semibold">Juni 2025</div>
                        <button id="next-month" class="text-white">&gt;</button>
                    </div>
                    
                    <div class="grid grid-cols-7 gap-1 p-2" id="calendar-grid">
                        <div class="text-center p-1 text-sm font-medium">Sen</div>
                        <div class="text-center p-1 text-sm font-medium">Sel</div>
                        <div class="text-center p-1 text-sm font-medium">Rab</div>
                        <div class="text-center p-1 text-sm font-medium">Kam</div>
                        <div class="text-center p-1 text-sm font-medium">Jum</div>
                        <div class="text-center p-1 text-sm font-medium">Sab</div>
                        <div class="text-center p-1 text-sm font-medium">Min</div>
                        <!-- Calendar days will be generated by JavaScript -->
                    </div>
                </div>
            </div>
            
            <div class="mb-4">
                <label for="delivery-time" class="block mb-1 font-medium">Waktu Pengiriman</label>
                <input type="time" id="delivery-time" class="w-full p-2 border border-gray-200 rounded">
            </div>
            
            <div class="mb-4">
                <label for="delivery-address" class="block mb-1 font-medium">Alamat Pengiriman</label>
                <textarea id="delivery-address" class="w-full p-2 border border-gray-200 rounded" rows="3" placeholder="Masukkan alamat lengkap"></textarea>
            </div>
            
            <div class="mb-6">
                <label for="delivery-notes" class="block mb-1 font-medium">Catatan Tambahan</label>
                <textarea id="delivery-notes" class="w-full p-2 border border-gray-200 rounded" rows="3" placeholder="Masukkan catatan jika ada"></textarea>
            </div>
            
            <div class="flex flex-col sm:flex-row justify-between gap-3">
                <button class="bg-gray-300 text-gray-700 py-2 px-6 rounded font-medium hover:bg-gray-400 transition-colors w-full sm:w-auto">Batalkan</button>
                <button id="confirm-delivery" class="bg-[#ff9a00] text-white py-2 px-6 rounded font-medium hover:bg-orange-600 transition-colors w-full sm:w-auto">Konfirmasi Pengiriman</button>
            </div>
        </div>
    </main>
    
    <script>
        $(document).ready(function() {
    $('.add-to-cart').on('click', function() {
        var btn = $(this);
        var productId = btn.data('productid');

        $.ajax({
            url: '{{ route("cart.add") }}',
            type: 'POST',
            data: {
                product_id: productId,
                _token: '{{ csrf_token() }}'
            },
            success: function(response) {
                // SweetAlert Toast
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'success',
                    title: response.message,
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true
                });
                btn.text('Added!');
                btn.removeClass('text-[#ff9a00] border-[#ff9a00]')
                   .addClass('bg-[#4CAF50] text-white border-[#4CAF50]');
                setTimeout(function() {
                    btn.text('Add to Cart');
                    btn.removeClass('bg-[#4CAF50] text-white border-[#4CAF50]')
                       .addClass('text-[#ff9a00] border-[#ff9a00]');
                }, 2000);
            },
            error: function(xhr) {
                // SweetAlert Toast Error
                Swal.fire({
                    toast: true,
                    position: 'top-end',
                    icon: 'error',
                    title: 'Gagal menambahkan ke keranjang!',
                    showConfirmButton: false,
                    timer: 3000,
                    timerProgressBar: true
                });
            }
        });
    });
});
        
        // Calendar functionality
        const deliveryDateInput = document.getElementById('delivery-date');
        const prevMonthBtn = document.getElementById('prev-month');
        const nextMonthBtn = document.getElementById('next-month');
        const calendarMonth = document.getElementById('calendar-month');
        const calendarGrid = document.getElementById('calendar-grid');
        
        // Current selected date
        let selectedDate = new Date(2025, 5, 20); // June 20, 2025
        
        // Initialize calendar
        updateCalendar();
        
        // Update delivery date input
        function updateDeliveryDateInput() {
            const options = { day: 'numeric', month: 'long', year: 'numeric' };
            deliveryDateInput.value = selectedDate.toLocaleDateString('id-ID', options);
        }
        
        // Month navigation
        prevMonthBtn.addEventListener('click', function() {
            selectedDate.setMonth(selectedDate.getMonth() - 1);
            updateCalendar();
        });
        
        nextMonthBtn.addEventListener('click', function() {
            selectedDate.setMonth(selectedDate.getMonth() + 1);
            updateCalendar();
        });
        
        // Update calendar
        function updateCalendar() {
            const monthNames = ['Januari', 'Februari', 'Maret', 'April', 'Mei', 'Juni', 'Juli', 'Agustus', 'September', 'Oktober', 'November', 'Desember'];
            calendarMonth.textContent = `${monthNames[selectedDate.getMonth()]} ${selectedDate.getFullYear()}`;
            
            // Get first day of the month
            const firstDay = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1);
            // Get last day of the month
            const lastDay = new Date(selectedDate.getFullYear(), selectedDate.getMonth() + 1, 0);
            
            // Get the day of the week for the first day (0 = Sunday, 1 = Monday, etc.)
            // Convert to Monday-based indexing (0 = Monday, 6 = Sunday)
            let firstDayIndex = firstDay.getDay() - 1;
            if (firstDayIndex < 0) firstDayIndex = 6; // Sunday becomes index 6
            
            // Calculate days from previous month to display
            const prevMonthDays = firstDayIndex;
            
            // Get last day of previous month
            const prevMonthLastDay = new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 0).getDate();
            
            // Keep the headers
            const headers = Array.from(calendarGrid.querySelectorAll('.text-sm.font-medium'));
            
            // Clear calendar grid
            calendarGrid.innerHTML = '';
            
            // Re-add headers
            headers.forEach(header => {
                calendarGrid.appendChild(header);
            });
            
            // Add days from previous month
            for (let i = prevMonthDays; i > 0; i--) {
                const dayElem = document.createElement('div');
                dayElem.className = 'text-center p-1 text-gray-400 cursor-pointer';
                dayElem.textContent = prevMonthLastDay - i + 1;
                calendarGrid.appendChild(dayElem);
            }
            
            // Add days of current month
            for (let i = 1; i <= lastDay.getDate(); i++) {
                const dayElem = document.createElement('div');
                dayElem.className = 'text-center p-1 border border-gray-200 rounded cursor-pointer hover:bg-gray-100';
                dayElem.textContent = i;
                
                // Check if this is the selected date
                if (i === selectedDate.getDate()) {
                    dayElem.classList.add('bg-[#ff9a00]', 'text-white');
                    dayElem.classList.remove('hover:bg-gray-100');
                }
                
                dayElem.addEventListener('click', function() {
                    // Remove active class from all days
                    const allDays = calendarGrid.querySelectorAll('div:not(.text-sm)');
                    allDays.forEach(d => {
                        d.classList.remove('bg-[#ff9a00]', 'text-white');
                        if (!d.classList.contains('text-gray-400')) {
                            d.classList.add('hover:bg-gray-100');
                        }
                    });
                    
                    // Add active class to clicked day
                    this.classList.add('bg-[#ff9a00]', 'text-white');
                    this.classList.remove('hover:bg-gray-100');
                    
                    // Update selected date
                    selectedDate.setDate(parseInt(this.textContent));
                    
                    // Update delivery date input
                    updateDeliveryDateInput();
                });
                
                calendarGrid.appendChild(dayElem);
            }
            
            // Add days from next month
            const totalCells = 42; // 6 rows * 7 days
            const daysFromCurrentMonth = prevMonthDays + lastDay.getDate();
            const daysFromNextMonth = totalCells - daysFromCurrentMonth;
            
            for (let i = 1; i <= daysFromNextMonth; i++) {
                const dayElem = document.createElement('div');
                dayElem.className = 'text-center p-1 text-gray-400 cursor-pointer';
                dayElem.textContent = i;
                calendarGrid.appendChild(dayElem);
            }
        }
        
        // Logout functionality
        document.querySelector('button[aria-label="Logout"]').addEventListener('click', function() {
            if (confirm('Apakah Anda yakin ingin keluar?')) {
                alert('Anda telah keluar dari sistem');
                // Here you would typically redirect to login page
                console.log('User logged out');
            }
        });
        
        // Form submission
        document.getElementById('confirm-delivery').addEventListener('click', function() {
            const deliveryDate = deliveryDateInput.value;
            const deliveryTime = document.getElementById('delivery-time').value;
            const deliveryAddress = document.getElementById('delivery-address').value;
            const deliveryNotes = document.getElementById('delivery-notes').value;
            
            if (!deliveryAddress) {
                alert('Mohon masukkan alamat pengiriman');
                return;
            }
            
            alert(`Pesanan Anda akan dikirim pada ${deliveryDate} pukul ${deliveryTime} ke alamat yang sudah ditentukan.`);
            console.log({
                date: deliveryDate,
                time: deliveryTime,
                address: deliveryAddress,
                notes: deliveryNotes,
                items: cartItems
            });
        });
    </script>
  </x-layout>